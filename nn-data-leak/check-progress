#!/usr/bin/perl -lanw

# Only look at progress lines
next unless (/^\d/);

my $actual = $F[4];
my $predicted = $F[5];

my $label = int($actual);

my $array_name = "P$label";
$ArrayNames{$array_name} = 1;

push(@$array_name, $predicted);

END {
    my $Errors = 0;

    sub check_series($@) {
        my ($label, @series) = @_;

        my $prev_val = -1;
        my $val;

        for my $i (0 .. $#series) {
            $val = $series[$i];
            my $exno = $i + 1;

            if ($val > $label) {
                print "constant label=$label: example-no=$exno " .
                      " predicted=$val exceeds max ($label):\n" .
                      " @series";
                $Errors++;
            }

            if ($prev_val > $val) {
                print "constant label=$label: example-no=$exno " .
                      " predicted=$val is non-monotonic!\n" .
                      " @series";
                $Errors++;
            }

            $prev_val = $val;
        }
    }
    for my $arrname (keys %ArrayNames) {
        my ($label) = ($arrname =~ /(\d+)/);
        check_series($label, @$arrname);
    }
    if ($Errors == 0) {
        print "All OK! (predicted values monotonically approaching label)";
        for my $arrname (keys %ArrayNames) {
            print "\t$arrname: ", join(' ', @$arrname);
        }
    }
}
